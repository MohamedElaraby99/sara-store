#!/usr/bin/env python3
"""
Add 100 sample products for testing
"""

import random
from app import app
from models import db, Product, Category

def add_sample_products():
    """Add 100 sample products for testing"""
    print("📦 Adding Sample Products for Testing")
    print("=" * 50)
    
    with app.app_context():
        # Check if categories exist
        categories = Category.query.all()
        if not categories:
            print("❌ No categories found. Creating sample categories first...")
            create_sample_categories()
            categories = Category.query.all()
        
        print(f"📂 Found {len(categories)} categories")
        
        # Sample products data - 100 products
        products_data = [
            # أدوات مكتبية (20 منتج)
            ("قلم جاف أزرق", "قلم جاف عالي الجودة", 1.5, 2.5, 500, 50),
            ("قلم جاف أحمر", "قلم جاف لون أحمر", 1.5, 2.5, 300, 50),
            ("قلم جاف أسود", "قلم جاف لون أسود", 1.5, 2.5, 800, 50),
            ("قلم رصاص HB", "قلم رصاص رقم 2", 1.0, 2.0, 600, 100),
            ("قلم رصاص 2H", "قلم رصاص خفيف", 1.0, 2.0, 200, 50),
            ("قلم رصاص 2B", "قلم رصاص غامق", 1.0, 2.0, 300, 50),
            ("ممحاة بيضاء", "ممحاة قلم رصاص", 2.0, 3.5, 400, 80),
            ("ممحاة ملونة", "ممحاة بألوان مختلفة", 2.5, 4.0, 200, 40),
            ("مسطرة 20 سم", "مسطرة بلاستيك شفافة", 3.0, 5.0, 150, 30),
            ("مسطرة 30 سم", "مسطرة بلاستيك 30 سم", 4.0, 6.5, 100, 20),
            ("مشبك ورق صغير", "مشابك ورق معدنية", 0.5, 1.0, 1000, 200),
            ("مشبك ورق كبير", "مشابك ورق كبيرة", 1.0, 2.0, 500, 100),
            ("دبابيس", "دبابيس للوحة الفلين", 5.0, 8.0, 200, 40),
            ("شريط لاصق", "شريط لاصق شفاف", 8.0, 12.0, 150, 30),
            ("غراء سائل", "غراء للورق والكرتون", 6.0, 10.0, 100, 25),
            ("غراء عصا", "غراء عصا للأطفال", 7.0, 12.0, 120, 30),
            ("مقص صغير", "مقص مكتبي صغير", 15.0, 25.0, 80, 15),
            ("مقص كبير", "مقص مكتبي احترافي", 25.0, 40.0, 50, 10),
            ("برجل هندسي", "برجل للرسم الهندسي", 35.0, 55.0, 40, 10),
            ("منقلة هندسية", "منقلة بلاستيك شفافة", 8.0, 12.0, 100, 20),
            
            # أقلام ملونة وفنية (15 منتج)
            ("أقلام تلوين 12 لون", "علبة أقلام تلوين", 15.0, 25.0, 80, 10),
            ("أقلام تلوين 24 لون", "علبة أقلام تلوين كبيرة", 25.0, 40.0, 50, 10),
            ("أقلام خشبية ملونة", "أقلام خشبية للتلوين", 20.0, 35.0, 60, 15),
            ("أقلام فلوماستر", "أقلام فلوماستر ملونة", 18.0, 30.0, 40, 10),
            ("قلم تحديد أصفر", "قلم تحديد هايلايتر", 8.0, 12.0, 100, 20),
            ("قلم تحديد أخضر", "قلم تحديد أخضر", 8.0, 12.0, 80, 20),
            ("قلم تحديد وردي", "قلم تحديد وردي", 8.0, 12.0, 70, 20),
            ("قلم تحديد برتقالي", "قلم تحديد برتقالي", 8.0, 12.0, 60, 20),
            ("ألوان مائية", "علبة ألوان مائية", 45.0, 70.0, 30, 8),
            ("ألوان زيتية", "ألوان زيتية للرسم", 65.0, 100.0, 20, 5),
            ("فرش رسم", "مجموعة فرش رسم", 35.0, 55.0, 25, 8),
            ("لوحة ألوان", "لوحة خلط الألوان", 15.0, 25.0, 40, 10),
            ("كانفاس للرسم", "لوحة كانفاس جاهزة", 25.0, 40.0, 35, 8),
            ("طباشير ملونة", "طباشير للرسم", 12.0, 20.0, 50, 15),
            ("ماركر دائم", "قلم تحديد دائم", 10.0, 15.0, 80, 20),
            
            # دفاتر وكراسات (20 منتج)
            ("كراسة 100 ورقة", "كراسة سلك مسطرة", 12.0, 20.0, 200, 30),
            ("كراسة 200 ورقة", "كراسة سلك كبيرة", 20.0, 35.0, 150, 25),
            ("دفتر A4 مسطر", "دفتر حجم A4 مسطر", 25.0, 40.0, 100, 20),
            ("دفتر A4 مربعات", "دفتر حجم A4 مربعات", 25.0, 40.0, 80, 15),
            ("دفتر A5 صغير", "دفتر حجم A5", 15.0, 25.0, 120, 25),
            ("كراسة رسم A4", "كراسة رسم وتلوين", 18.0, 30.0, 90, 20),
            ("دفتر ملاحظات", "دفتر ملاحظات صغير", 10.0, 18.0, 150, 30),
            ("أجندة سنوية", "أجندة تخطيط سنوي", 45.0, 75.0, 30, 5),
            ("دفتر مواعيد", "دفتر تسجيل المواعيد", 20.0, 35.0, 40, 10),
            ("مذكرة لاصقة", "أوراق لاصقة للملاحظات", 8.0, 12.0, 150, 30),
            ("حافظة أوراق", "حافظة أوراق بلاستيك", 8.0, 12.0, 100, 25),
            ("ملف أوراق A4", "ملف حفظ أوراق", 12.0, 20.0, 80, 20),
            ("مطوية A4", "مجلد أوراق A4", 25.0, 40.0, 45, 12),
            ("دفتر تحضير", "دفتر تحضير للمعلم", 30.0, 50.0, 35, 8),
            ("كراسة إملاء", "كراسة إملاء مسطرة", 8.0, 15.0, 200, 40),
            ("دفتر خط عربي", "دفتر لتحسين الخط", 12.0, 20.0, 100, 25),
            ("كراسة موسيقى", "كراسة نوتة موسيقية", 15.0, 25.0, 50, 15),
            ("دفتر حضور", "دفتر حضور وغياب", 20.0, 35.0, 30, 10),
            ("سجل درجات", "سجل لتسجيل الدرجات", 25.0, 40.0, 25, 8),
            ("دفتر مراسلات", "دفتر المراسلات الرسمية", 18.0, 30.0, 40, 12),
            
            # كتب ومراجع (15 منتج)
            ("كتاب الرياضيات", "كتاب رياضيات للمرحلة الثانوية", 80.0, 120.0, 50, 10),
            ("كتاب الفيزياء", "كتاب فيزياء للثانوية العامة", 90.0, 140.0, 40, 8),
            ("كتاب الكيمياء", "كتاب كيمياء شامل", 85.0, 130.0, 45, 10),
            ("كتاب اللغة العربية", "كتاب نحو وأدب", 70.0, 110.0, 60, 12),
            ("كتاب اللغة الإنجليزية", "كتاب إنجليزي متقدم", 75.0, 115.0, 55, 12),
            ("قاموس عربي-إنجليزي", "قاموس شامل", 120.0, 180.0, 25, 5),
            ("كتاب الجغرافيا", "كتاب جغرافيا العالم", 65.0, 100.0, 35, 8),
            ("كتاب التاريخ", "كتاب تاريخ الحضارات", 70.0, 110.0, 30, 6),
            ("كتاب الأحياء", "كتاب علم الأحياء", 80.0, 125.0, 40, 10),
            ("كتاب الجيولوجيا", "كتاب علوم الأرض", 75.0, 115.0, 25, 6),
            ("كتاب تمارين", "كتاب تمارين متنوعة", 30.0, 50.0, 80, 20),
            ("دليل الطالب", "دليل إرشادي للطلاب", 40.0, 65.0, 50, 12),
            ("خريطة العالم", "خريطة جغرافية ملونة", 35.0, 55.0, 30, 8),
            ("جدول الضرب", "جدول الضرب التعليمي", 8.0, 12.0, 100, 25),
            ("أطلس العالم", "أطلس جغرافي مصور", 120.0, 180.0, 20, 5),
            
            # مستلزمات رياضية (10 منتج)
            ("كرة قدم", "كرة قدم رسمية", 120.0, 180.0, 20, 5),
            ("كرة سلة", "كرة سلة احترافية", 150.0, 220.0, 15, 3),
            ("كرة تنس", "كرة تنس للملاعب", 25.0, 40.0, 50, 10),
            ("مضرب تنس طاولة", "مضرب تنس طاولة", 45.0, 70.0, 30, 8),
            ("حبل قفز", "حبل قفز رياضي", 15.0, 25.0, 40, 10),
            ("شريط مقاومة", "شريط مقاومة للتمارين", 30.0, 50.0, 25, 8),
            ("كرة طائرة", "كرة طائرة للشاطئ", 80.0, 120.0, 20, 5),
            ("شبكة تنس طاولة", "شبكة تنس طاولة قابلة للطي", 60.0, 90.0, 15, 5),
            ("ملابس رياضية", "بدلة رياضية للطلاب", 100.0, 150.0, 30, 8),
            ("حذاء رياضي", "حذاء رياضي للجري", 200.0, 300.0, 25, 6),
            
            # أجهزة إلكترونية (10 منتج)
            ("آلة حاسبة علمية", "آلة حاسبة للطلاب", 80.0, 120.0, 35, 8),
            ("آلة حاسبة بسيطة", "آلة حاسبة أساسية", 25.0, 40.0, 60, 15),
            ("فلاشة USB 8GB", "ذاكرة تخزين محمولة", 45.0, 70.0, 50, 12),
            ("فلاشة USB 16GB", "ذاكرة 16 جيجا", 65.0, 95.0, 40, 10),
            ("فلاشة USB 32GB", "ذاكرة 32 جيجا", 85.0, 125.0, 30, 8),
            ("سماعات أذن", "سماعات للهاتف", 35.0, 55.0, 45, 12),
            ("شاحن موبايل", "شاحن عام للهواتف", 25.0, 40.0, 60, 15),
            ("كابل USB", "كابل شحن وبيانات", 15.0, 25.0, 80, 20),
            ("ماوس كمبيوتر", "ماوس لاسلكي", 40.0, 65.0, 30, 8),
            ("لوحة مفاتيح", "لوحة مفاتيح عربي-إنجليزي", 80.0, 120.0, 20, 5),
            
            # مستلزمات متنوعة (10 منتج)
            ("شنطة مدرسية", "شنطة ظهر للطلاب", 120.0, 180.0, 25, 6),
            ("علبة أقلام", "علبة حفظ الأقلام", 15.0, 25.0, 60, 15),
            ("مقلمة قماش", "مقلمة قماش مع سحاب", 18.0, 30.0, 50, 12),
            ("مقلمة بلاستيك", "مقلمة بلاستيك شفافة", 12.0, 20.0, 70, 18),
            ("لاصق زخرفي", "لاصقات ملونة للزينة", 5.0, 8.0, 100, 25),
            ("مشابك ملونة", "مشابك ورق ملونة", 3.0, 5.0, 200, 50),
            ("قلم تصحيح", "قلم تصحيح الأخطاء", 6.0, 10.0, 100, 25),
            ("حافظة بطاقات", "حافظة بطاقات شخصية", 12.0, 20.0, 60, 15),
            ("مبراة معدنية", "مبراة أقلام معدنية", 5.0, 8.0, 100, 25),
            ("مبراة كهربائية", "مبراة أقلام كهربائية", 85.0, 130.0, 15, 3),
        ]
        
        # Map category names to IDs
        category_map = {}
        for cat in categories:
            if 'مكتب' in cat.name_ar or 'أدوات' in cat.name_ar:
                category_map['office'] = cat.id
            elif 'كتب' in cat.name_ar or 'مراجع' in cat.name_ar:
                category_map['books'] = cat.id
            elif 'دفاتر' in cat.name_ar or 'كراسات' in cat.name_ar:
                category_map['notebooks'] = cat.id
            elif 'رياضية' in cat.name_ar or 'رياضي' in cat.name_ar:
                category_map['sports'] = cat.id
            elif 'إلكترونية' in cat.name_ar or 'أجهزة' in cat.name_ar:
                category_map['electronics'] = cat.id
        
        # If no specific categories found, use first available
        if not category_map:
            category_map['default'] = categories[0].id
        
        print(f"📝 Adding {len(products_data)} products...")
        
        added_count = 0
        for i, (name, desc, wholesale, retail, stock, min_stock) in enumerate(products_data):
            # Check if product already exists
            existing = Product.query.filter_by(name_ar=name).first()
            if existing:
                print(f"   ⚠️  Product already exists: {name}")
                continue
            
            # Assign category based on product type
            category_id = category_map.get('default', categories[0].id)
            if i < 35:  # Office supplies and art supplies
                category_id = category_map.get('office', categories[0].id)
            elif i < 55:  # Notebooks
                category_id = category_map.get('notebooks', categories[0].id)
            elif i < 70:  # Books
                category_id = category_map.get('books', categories[0].id)
            elif i < 80:  # Sports
                category_id = category_map.get('sports', categories[0].id)
            elif i < 90:  # Electronics
                category_id = category_map.get('electronics', categories[0].id)
            
            # Create product
            product = Product(
                name_ar=name,
                description_ar=desc,
                category_id=category_id,
                wholesale_price=wholesale,
                retail_price=retail,
                stock_quantity=stock,
                min_stock_threshold=min_stock,
                unit_type='كامل'
            )
            
            db.session.add(product)
            added_count += 1
            
            if added_count % 20 == 0:
                print(f"   ✅ Added {added_count} products...")
        
        try:
            db.session.commit()
            print(f"✅ Successfully added {added_count} products!")
            
            # Show summary
            total_products = Product.query.count()
            print(f"📊 Total products in database: {total_products}")
            
            # Show products per category
            for cat in categories:
                count = Product.query.filter_by(category_id=cat.id).count()
                print(f"   📂 {cat.name_ar}: {count} products")
            
        except Exception as e:
            db.session.rollback()
            print(f"❌ Error adding products: {str(e)}")

def create_sample_categories():
    """Create sample categories if they don't exist"""
    categories = [
        ('أدوات مكتبية', 'أقلام، مساطر، ممحايات وغيرها من الأدوات المكتبية'),
        ('كتب ومراجع', 'كتب دراسية ومراجع علمية وتعليمية'),
        ('دفاتر وكراسات', 'دفاتر وكراسات مختلفة الأحجام والأنواع'),
        ('مستلزمات رياضية', 'أدوات وملابس ومعدات رياضية'),
        ('أجهزة إلكترونية', 'حاسبات وأجهزة إلكترونية ومستلزماتها'),
    ]
    
    for name, desc in categories:
        existing = Category.query.filter_by(name_ar=name).first()
        if not existing:
            category = Category(name_ar=name, description_ar=desc)
            db.session.add(category)
    
    db.session.commit()

if __name__ == '__main__':
    add_sample_products() 